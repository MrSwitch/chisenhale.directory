* {
  box-sizing: border-box;
}

:root {
  --color-navy: #1c2746;
  --color-yellow: #fdc608;
  --page-width: 1024px;
  --bg-color: var(--color-navy);


  color: white;
  background-color: var(--bg-color);
  font-size: 16px;
  font-weight: 300;
}

a {
  color: inherit;
  text-decoration: none;

  p & {
    text-decoration: underline;
  }
}

body {
  font-family:
    "Poppins", 
    sans-serif;
  line-height: 2;
  margin: 0;

  > main,
  > header > h1,
  > header > menu{
    margin: 0 auto 0;
    padding: 15px;
    max-width: var(--page-width);
  }


  > header {
    background-position: center;
    background-size: cover;
    min-height: 50vh;
    /* > img {
      max-height: 200px;
      width: 100%;
      object-fit: cover;
    } */
    > menu,
    > nav > ul {
      margin: 0 auto 0;
      list-style: none;

      > li {
        display: inline-block;
        padding-right: 20px;
      }
    }

  }

  > main {
    > section {
      flex-flow: row wrap;
      display: flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      gap: 1em;

      > article {
        flex: 1 1 300px;
        padding: 10px;
        width: 100%;
        box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.4);
        border-radius: 10px;

        > img {
          aspect-ratio: 16 / 9;
          width: 100%;
          object-fit: cover;
        }
      }
    }
  }
}

footer {
  padding: 1em;
  font-style: italic;
  font-size: 0.8em;
  color: var(--color-yellow);
}

/**********************
* Page View Transition
**********************/

@view-transition {
  navigation: auto;
}

main {
  view-transition-name: page;
}

::view-transition-old(page) {
  animation: slide-out 0.5s cubic-bezier(0.86, 0, 0.07, 1) forwards;
}

::view-transition-new(page) {
  animation: slide-in 0.5s cubic-bezier(0.86, 0, 0.07, 1) forwards;
}

@keyframes slide-out {
  0% {
    transform: translateX(0%);
  }

  100% {
    opacity: 0;
    transform: translateX(calc(50% * var(--direction, 1)));
  }
}

@keyframes slide-in {
  0% {
    opacity: 0;
    transform: translateX(calc(-50% * var(--direction, 1)));
  }

  100% {
    transform: translateX(0%);
  }
}
